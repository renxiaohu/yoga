<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.woniu.yoga.venue.dao.CCMapper">
  <resultMap id="BaseResultMap" type="com.woniu.yoga.venue.pojo.CC">
    <id column="cc_id" jdbcType="INTEGER" property="ccId" />
    <result column="course_id" jdbcType="INTEGER" property="courseId" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="comment_detail" jdbcType="VARCHAR" property="commentDetail" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="comment_degree" jdbcType="INTEGER" property="commentDegree" />
    <result column="cc_flag" jdbcType="INTEGER" property="ccFlag" />
  </resultMap>
  <sql id="Base_Column_List">
    cc_id, course_id, student_id, comment_detail, create_time, comment_degree, cc_flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from course_comment
    where cc_id = #{ccId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from course_comment
    where cc_id = #{ccId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.woniu.yoga.venue.pojo.CC">
    insert into course_comment (cc_id, course_id, student_id, 
      comment_detail, create_time, comment_degree, 
      cc_flag)
    values (#{ccId,jdbcType=INTEGER}, #{courseId,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, 
      #{commentDetail,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{commentDegree,jdbcType=INTEGER}, 
      #{ccFlag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.woniu.yoga.venue.pojo.CC">
    insert into course_comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ccId != null">
        cc_id,
      </if>
      <if test="courseId != null">
        course_id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="commentDetail != null">
        comment_detail,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="commentDegree != null">
        comment_degree,
      </if>
      <if test="ccFlag != null">
        cc_flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ccId != null">
        #{ccId,jdbcType=INTEGER},
      </if>
      <if test="courseId != null">
        #{courseId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="commentDetail != null">
        #{commentDetail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentDegree != null">
        #{commentDegree,jdbcType=INTEGER},
      </if>
      <if test="ccFlag != null">
        #{ccFlag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.woniu.yoga.venue.pojo.CC">
    update course_comment
    <set>
      <if test="courseId != null">
        course_id = #{courseId,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="commentDetail != null">
        comment_detail = #{commentDetail,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="commentDegree != null">
        comment_degree = #{commentDegree,jdbcType=INTEGER},
      </if>
      <if test="ccFlag != null">
        cc_flag = #{ccFlag,jdbcType=INTEGER},
      </if>
    </set>
    where cc_id = #{ccId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.woniu.yoga.venue.pojo.CC">
    update course_comment
    set course_id = #{courseId,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      comment_detail = #{commentDetail,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      comment_degree = #{commentDegree,jdbcType=INTEGER},
      cc_flag = #{ccFlag,jdbcType=INTEGER}
    where cc_id = #{ccId,jdbcType=INTEGER}
  </update>
</mapper>